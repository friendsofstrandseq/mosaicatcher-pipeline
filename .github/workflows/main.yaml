name: mosaicatcher-pipeline workflow checks

on:
  push:
    branches:
      - master
      - smk_wf_catalog
      - ref_genomes
      - dev

jobs:
  # WORK
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Formatting
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true

  Linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Linting
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./workflow/Snakefile
          args: "--lint"
  Testing:
    runs-on: ubuntu-latest
    # needs:
    #   - Linting
    #   - Formatting
    steps:
      - uses: actions/checkout@v3
      - name: Testing data
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./workflow/Snakefile
          stagein: "conda config --set channel_priority flexible"
          args: "--cores 1 --use-conda --configfile .tests/config/simple_config.yaml --conda-frontend mamba -p --verbose --debug"
      - name: Testing report
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./workflow/Snakefile
          args: "--cores 1 --use-conda --configfile .tests/config/simple_config.yaml --conda-frontend mamba --report report.zip"
  Testing_norm_enabled:
    runs-on: ubuntu-latest
    # needs:
    #   - Linting
    #   - Formatting
    steps:
      - uses: actions/checkout@v3
      - name: Testing data
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./workflow/Snakefile
          stagein: "conda config --set channel_priority flexible"
          args: "--cores 1 --use-conda --configfile .tests/config/simple_config.yaml --config normalized_counts=True --conda-frontend mamba -p --verbose --debug"
      - name: Testing report
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./workflow/Snakefile
          args: "--cores 1 --use-conda --configfile .tests/config/simple_config.yaml --config normalized_counts=True --conda-frontend mamba --report report.zip"
  # Testing_wt_1000G:
  #   runs-on: ubuntu-latest
  #   # needs:
  #   #   - Linting
  #   #   - Formatting
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Testing data
  #       uses: snakemake/snakemake-github-action@v1.23.0
  #       with:
  #         directory: .
  #         snakefile: ./workflow/Snakefile
  #         stagein: "conda config --set channel_priority flexible"
  #         args: "--cores 1 --use-conda --configfile .tests/config/simple_config_wt_1000G.yaml --conda-frontend mamba -p --verbose --debug"
  #     - name: Testing report
  #       uses: snakemake/snakemake-github-action@v1.23.0
  #       with:
  #         directory: .
  #         snakefile: ./workflow/Snakefile
  #         args: "--cores 1 --use-conda --configfile .tests/config/simple_config_wt_1000G.yaml --conda-frontend mamba --report report.zip"
  # Testing_wt_1000G_norm:
  #   runs-on: ubuntu-latest
  #   # needs:
  #   #   - Linting
  #   #   - Formatting
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Testing data
  #       uses: snakemake/snakemake-github-action@v1.23.0
  #       with:
  #         directory: .
  #         snakefile: ./workflow/Snakefile
  #         stagein: "conda config --set channel_priority flexible"
  #         args: "--cores 1 --use-conda --configfile .tests/config/simple_config_wt_1000G.yaml --conda-frontend mamba -p --verbose --debug"
  #     - name: Testing report
  #       uses: snakemake/snakemake-github-action@v1.23.0
  #       with:
  #         directory: .
  #         snakefile: ./workflow/Snakefile
  #         args: "--cores 1 --use-conda --configfile .tests/config/simple_config_wt_1000G_norm.yaml --conda-frontend mamba --report report.zip"

  Linting_ashleys:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Linting
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./workflow/Snakefile
          args: "--lint --config ashleys_pipeline=True"
  Testing_ashleys:
    runs-on: ubuntu-latest
    # needs:
    #   - Linting
    #   - Formatting
    steps:
      - uses: actions/checkout@v3
      - name: Testing data
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./workflow/Snakefile
          stagein: "conda config --set channel_priority flexible"
          args: "--cores 1 --use-conda --configfile .tests/config/simple_config.yaml --config ashleys_pipeline=True use_light_data=True --conda-frontend mamba -p --verbose --debug"
      - name: Testing report
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./workflow/Snakefile
          args: "--cores 1 --use-conda --configfile .tests/config/simple_config.yaml --config ashleys_pipeline=True use_light_data=True --conda-frontend mamba --report report.zip"
  # Testing_ashleys_wt_1000G:
  #   runs-on: ubuntu-latest
  #   # needs:
  #   #   - Linting
  #   #   - Formatting
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Testing data
  #       uses: snakemake/snakemake-github-action@v1.23.0
  #       with:
  #         directory: .
  #         snakefile: ./workflow/Snakefile
  #         stagein: "conda config --set channel_priority flexible"
  #         args: "--cores 1 --use-conda --configfile .tests/config/simple_config_wt_1000G.yaml --config ashleys_pipeline=True use_light_data=True --conda-frontend mamba -p --verbose --debug"
  #     - name: Testing report
  #       uses: snakemake/snakemake-github-action@v1.23.0
  #       with:
  #         directory: .
  #         snakefile: ./workflow/Snakefile
  #         args: "--cores 1 --use-conda --configfile .tests/config/simple_config_wt_1000G.yaml --config ashleys_pipeline=True use_light_data=True snv_sites_to_genotype=BLANK.vcf --conda-frontend mamba --report report.zip"
  Testing_ashleys_norm_counts:
    runs-on: ubuntu-latest
    # needs:
    #   - Linting
    #   - Formatting
    steps:
      - uses: actions/checkout@v3
      - name: Testing data
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./workflow/Snakefile
          stagein: "conda config --set channel_priority flexible"
          args: "--cores 1 --use-conda --configfile .tests/config/simple_config.yaml --config ashleys_pipeline=True use_light_data=True normalized_counts=True --conda-frontend mamba -p --verbose --debug"
      - name: Testing report
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./workflow/Snakefile
          args: "--cores 1 --use-conda --configfile .tests/config/simple_config.yaml --config ashleys_pipeline=True use_light_data=True normalized_counts=True --conda-frontend mamba --report report.zip"
  Testing_jup_nb:
    runs-on: ubuntu-latest
    # needs:
    #   - Linting
    #   - Formatting
    steps:
      - uses: actions/checkout@v3
      - name: Testing data
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./workflow/Snakefile
          stagein: "conda config --set channel_priority flexible"
          args: "--cores 1 --use-conda --configfile .tests/config/simple_config.yaml --config ashleys_pipeline=True use_light_data=True hand_selection=True --conda-frontend mamba -p --verbose --debug"
      - name: Testing report
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./workflow/Snakefile
          args: "--cores 1 --use-conda --configfile .tests/config/simple_config.yaml --config ashleys_pipeline=True use_light_data=True hand_selection=True  --conda-frontend mamba --report report.zip"
  Downloading_example_data:
    runs-on: ubuntu-latest
    # needs:
    #   - Linting
    #   - Formatting
    steps:
      - uses: actions/checkout@v3
      - name: Downloading_example_data
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./workflow/Snakefile
          stagein: "mamba install -c conda-forge unzip"
          args: "--cores 1 --config dl_bam_example=True -p --verbose --debug"
  Downloading_hg19:
    runs-on: ubuntu-latest
    # needs:
    #   - Linting
    #   - Formatting
    steps:
      - uses: actions/checkout@v3
      - name: Downloading_hg19
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./workflow/Snakefile
          args: "--cores 1 --config dl_external_files=True reference=hg19 -p --verbose --debug"
  Downloading_hg38:
    runs-on: ubuntu-latest
    # needs:
    #   - Linting
    #   - Formatting
    steps:
      - uses: actions/checkout@v3
      - name: Downloading_hg38
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./workflow/Snakefile
          args: "--cores 1 --config dl_external_files=True reference=hg38 -p --verbose --debug"
  Downloading_installing_T2T:
    runs-on: ubuntu-latest
    # needs:
    #   - Linting
    #   - Formatting
    steps:
      - uses: actions/checkout@v3
      - name: Downloading_T2T
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./workflow/Snakefile
          stagein: "conda config --set channel_priority flexible"
          args: "--cores 1  --use-conda --conda-frontend mamba --config dl_external_files=True reference=T2T -p --verbose --debug"
